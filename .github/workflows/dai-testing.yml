name: ARP Test Workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v4
      
       # Set all script permissions
      - name: Make test script executable
        run: |
            chmod +x ./tests/testenv/*.sh
            chmod +x ./tests/module_init/*.sh
            chmod +x ./tests/set_params/*.sh
            chmod +x ./tests/param_behavior/*.sh
            chmod +x ./tests/CoreDAIFeatures/*.sh
            chmod +x ./tests/EdgeCases/*.sh

      # Run module_init Tests
      - name: Run test_build_kernel_module
        working-directory: ./tests/module_init/
        run: ./test_build_kernel_module.sh

      - name: Run test_insert_kernel_module
        working-directory: ./tests/module_init/
        run: ./test_insert_kernel_module.sh

      # Run set_params Tests
      - name: Run test_add_trusted_interface
        working-directory: ./tests/set_params/
        run: ./test_add_trusted_interface.sh

      - name: Run test_add_trusted_interfaces_malformed
        working-directory: ./tests/set_params/
        run: ./test_add_trusted_interfaces_malformed.sh

      - name: Run test_add_trusted_interfaces
        working-directory: ./tests/set_params/
        run: ./test_add_trusted_interfaces.sh

      - name: Run test_add_vlan
        working-directory: ./tests/set_params/
        run: ./test_add_vlan.sh

      - name: Run test_add_vlans_malformed
        working-directory: ./tests/set_params/
        run: ./test_add_vlans_malformed.sh

      - name: Run test_add_vlans
        working-directory: ./tests/set_params/
        run: ./test_add_vlans.sh

      - name: Run test_set_globally_enabled_dai_malformed
        working-directory: ./tests/set_params/
        run: ./test_set_globally_enabled_dai_malformed.sh

      - name: Run test_set_globally_enabled_dai
        working-directory: ./tests/set_params/
        run: ./test_set_globally_enabled_dai.sh

      - name: Run test_set_static_acl_enabled_malformed
        working-directory: ./tests/set_params/
        run: ./test_set_static_acl_enabled_malformed.sh

      - name: Run test_set_static_acl_enabled
        working-directory: ./tests/set_params/
        run: ./test_set_static_acl_enabled.sh

      # Run param_behavior Tests
      - name: Run test_dai_vlan_filtering
        working-directory: ./tests/param_behavior/
        run: ./test_dai_vlan_filtering.sh

      - name: Run test_globally_enabled_dai
        working-directory: ./tests/param_behavior/
        run: ./test_globally_enabled_dai.sh

      - name: Run test_static_acl_enabled
        working-directory: ./tests/param_behavior/
        run: ./test_static_acl_enabled.sh
      
      # Run Core_DAI_Features Tests
      - name: Run Test_ARP_Poisoning
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_ARP_Poisoning.sh

      - name: Run Test_Communication_after_DHCP_Snooping
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Communication_after_DHCP_Snooping.sh

      - name: Run Test_Communication_from_Unacknowledged_Sources
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Communication_from_Unacknowledged_Sources.sh

      - name: Run Test_Static_Entry_In_The_ARP_Table
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Static_Entry_In_The_ARP_Table.sh

      - name: Run Test_Trusted_Interfaces
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Trusted_Interfaces.sh

      - name: Run Test_Untrusted_Interfaces
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Untrusted_Interfaces.sh

      - name: Run Test_Above_Rate_Limit
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Above_Rate_Limit.sh

      - name: Run Test_Below_Rate_Limit
        working-directory: ./tests/CoreDAIFeatures/
        run: ./Test_Below_Rate_Limit.sh

        # Run Edge_Cases Tests
      - name: Run Test_Malformed_ARP_Request
        working-directory: ./tests/EdgeCases/
        run: ./Test_Malformed_ARP_Request.sh